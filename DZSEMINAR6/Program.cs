// // 6 - ой семинар:
// // Задача 1: Задать двумерный массив char . Вывести строку из его символов.

// // Создаем двумерный массив 
 char[,] charArray = new char[,] { { 'Л', 'ю' }, { 'б', 'а' } };

//  Создаем функцию для формирования строки из двумерного массива символов
string StringFromArray(char[,] array)
 {
 string result = ""; // переменная куда будем складывать символы
//  Добавляем каждый элемент двумерного массива в  результ.строку
for (int i = 0; i < array.GetLength(0); i++) // перемещение по строкам
    {
     for (int j = 0; j < array.GetLength(1); j++) // перемещение по столбцам
     {
 result += array[i, j];
     }
    }
     return result;
 }
//  Вызываем функцию для формирования строки из массива
string result = StringFromArray(charArray);
 // Выводим результат
 Console.WriteLine(result);

//  Задача 2: Замена заглавных букв на строчные в строке

// Входная строка с буквами обоих регистров 
// Преобразование всех заглавных букв в строчные
// Console.WriteLine("Введите строчку"); //  Почему так не получилось
// string input = Console.ReadLine(); //  Почему так не получилось 
// string input = "DDDDDRR";
// string result = input.ToLower();// Преобразование заглавных в строчные
// Console.WriteLine(result);// Вывод результата

// Задача 3: Проверка строки на палиндром
//  Данное решение слишком наворочено, буду использовать способы попроще. 
//  string input = "папа";
// // Вызов функции для проверки, является ли строка палиндромом 
// bool isPalindrome = IsPalindrome(input);
// //  Вывод результата
// Console.WriteLine(isPalindrome ? "Да, это палиндром" : "Нет, это не палиндром");
// //  Функция для проверки, является ли строка палиндромом
// static bool IsPalindrome(string str);
// {
// //  Нормализация строки путем удаления не буквенно-цифровых символов и приведения к нижнему регистру
// string normalized = new
// string(str.Where(char.IsLetterOrDigit).ToArray()).ToLower();// Много параметров, непонятно
// // Сравнение строки с ее перевернутым вариантом
// return normalized.SequenceEqual(normalized.Reverse());
// }
 